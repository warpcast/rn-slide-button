{"version":3,"sources":["SlideButton.tsx"],"names":["React","StyleSheet","View","I18nManager","SlideButtonThumb","SlideButtonText","Animated","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useSharedValue","withSpring","DEFAULT_HEIGHT","DEFAULT_BORDER_RADIUS","DEFAULT_CONTAINER_PADDING","DEFAULT_COMPLETE_THRESHOLD","DEFAULT_CONTAINER_COLOR","DEFAULT_UNDERLAY_COLOR","DEFAULT_TITLE","DEFAULT_AUTO_RESET","DEFAULT_AUTO_RESET_DELAY","DEFAULT_ANIMATION","DEFAULT_ANIMATION_DURATION","SlideButton","width","height","borderRadius","completeThreshold","disabled","padding","title","titleContainerStyle","titleStyle","icon","thumbStyle","containerStyle","underlayStyle","onReachedToStart","onReachedToEnd","onSlideEnd","onSlideStart","reverseSlideEnabled","autoReset","autoResetDelay","animation","animationDuration","dynamicResetEnabled","dynamicResetDelaying","dimensions","setDimensions","useState","endReached","setEndReached","timeoutRef","useRef","gestureDisabled","dragX","isRTL","rtlMultiplier","opacity","borderWidth","thumbWidth","childHeight","undefined","tWidth","flatten","Number","bWidth","radius","scrollDistance","slideThreshold","onLayoutContainer","e","nativeEvent","layout","w","h","useEffect","value","reset","current","clearTimeout","underlayAnimStyle","underlayDynamicStyle","left","handleComplete","reached","setTimeout","clamp","lowerBound","upperBound","Math","min","max","damping","stiffness","moveTo","complete","animatedGestureHandler","onStart","_","context","startX","onActive","event","translationX","onEnd","styles","container","underlayContainer","memo","defaultProps","create","backgroundColor","alignSelf","justifyContent","marginVertical","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport SlideButtonThumb, { SlideButtonThumbProps } from './SlideButtonThumb';\nimport SlideButtonText, { SlideButtonTextProps } from './SlideButtonText';\nimport Animated, {\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\nimport { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n\nconst DEFAULT_HEIGHT = 56;\nconst DEFAULT_BORDER_RADIUS = DEFAULT_HEIGHT / 2;\nconst DEFAULT_CONTAINER_PADDING = 5;\nconst DEFAULT_COMPLETE_THRESHOLD = 70;\nconst DEFAULT_CONTAINER_COLOR = '#0095FF';\nconst DEFAULT_UNDERLAY_COLOR = '#42AAFF';\nconst DEFAULT_TITLE = 'Slide to confirm';\nconst DEFAULT_AUTO_RESET = false;\nconst DEFAULT_AUTO_RESET_DELAY = 1080;\nconst DEFAULT_ANIMATION = false;\nconst DEFAULT_ANIMATION_DURATION = 180;\n\nexport type SlideButtonPropsExtends = Omit<\n  SlideButtonCommonProps,\n  'translateX' | 'scrollDistance' | 'endReached' | 'isRTL'\n> &\n  Omit<\n    SlideButtonThumbProps,\n    | 'opacity'\n    | 'gestureHandler'\n    | 'translateX'\n    | 'scrollDistance'\n    | 'endReached'\n    | 'isRTL'\n  > &\n  Omit<\n    SlideButtonTextProps,\n    'translateX' | 'scrollDistance' | 'endReached' | 'isRTL'\n  >;\n\ninterface SlideButtonProps extends SlideButtonPropsExtends {\n  width?: number;\n  disabled?: boolean;\n  completeThreshold?: number;\n  onSlideStart?: () => void;\n  onSlideEnd?: (complete: boolean) => void;\n  onReachedToStart?: () => void;\n  onReachedToEnd?: () => void;\n  underlayStyle?: StyleProp<ViewStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  thumbStyle?: StyleProp<ViewStyle>;\n  autoReset?: boolean;\n  autoResetDelay?: number;\n}\n\ntype AnimatedGHContext = {\n  startX: number;\n};\n\nexport type SlideButtonCommonProps = {\n  height?: number;\n  borderRadius?: number;\n  padding?: number;\n  translateX: Animated.SharedValue<number>;\n  endReached: boolean;\n  scrollDistance: number;\n  reverseSlideEnabled?: boolean;\n  animation?: boolean;\n  animationDuration?: number;\n  dynamicResetEnabled?: boolean;\n  dynamicResetDelaying?: boolean;\n};\n\nconst SlideButton = ({\n  width,\n  height,\n  borderRadius,\n  completeThreshold,\n  disabled,\n  padding,\n  title,\n  titleContainerStyle,\n  titleStyle,\n  icon,\n  thumbStyle,\n  containerStyle,\n  underlayStyle,\n  onReachedToStart,\n  onReachedToEnd,\n  onSlideEnd,\n  onSlideStart,\n  reverseSlideEnabled,\n  autoReset,\n  autoResetDelay,\n  animation,\n  animationDuration,\n  dynamicResetEnabled,\n  dynamicResetDelaying,\n}: SlideButtonProps) => {\n  const [dimensions, setDimensions] = React.useState({ width: 0, height: 0 });\n  const [endReached, setEndReached] = React.useState<boolean>(false);\n  const timeoutRef = React.useRef<NodeJS.Timeout | null>();\n\n  const gestureDisabled = useSharedValue(disabled);\n  const dragX = useSharedValue(0);\n\n  const isRTL = I18nManager.isRTL;\n  const rtlMultiplier = isRTL ? -1 : 1;\n  const opacity = disabled ? 0.55 : 1;\n\n  let borderWidth = 0;\n  let thumbWidth = height! - padding! * 2;\n  let childHeight = height! - padding! * 2;\n  if (thumbStyle !== undefined) {\n    let tWidth = StyleSheet.flatten(thumbStyle).width;\n    if (tWidth !== undefined) {\n      thumbWidth = Number(tWidth);\n    }\n  }\n\n  if (containerStyle !== undefined) {\n    let bWidth = StyleSheet.flatten(containerStyle).borderWidth;\n    if (bWidth !== undefined) {\n      borderWidth = Number(bWidth);\n    }\n  }\n\n  const radius = borderRadius! - padding!;\n\n  const scrollDistance =\n    (dimensions.width - padding! * 2 - thumbWidth - borderWidth * 2) *\n    rtlMultiplier;\n  const slideThreshold = scrollDistance * (completeThreshold! / 100);\n\n  const onLayoutContainer = async (e: LayoutChangeEvent) => {\n    const { width, height } = e.nativeEvent.layout;\n    const { width: w, height: h } = dimensions;\n    if (w !== width || h !== height) {\n      setDimensions({ width, height });\n    }\n  };\n\n  React.useEffect(() => {\n    gestureDisabled.value = disabled;\n  }, [disabled]);\n\n  React.useEffect(() => {\n    if (dynamicResetEnabled && !dynamicResetDelaying) {\n      reset();\n    }\n  }, [dynamicResetDelaying]);\n\n  React.useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const underlayAnimStyle = useAnimatedStyle(() => {\n    return {\n      width: thumbWidth - borderWidth * 2 + dragX.value * rtlMultiplier,\n    };\n  });\n\n  //let KEY = isRTL ? 'right' : 'left';\n  const underlayDynamicStyle = {\n    left: padding!,\n    height: childHeight - borderWidth * 2,\n    borderRadius: radius,\n  };\n\n  const handleComplete = (reached: boolean) => {\n    // console.log(`handleComplete: ${reached}`);\n    if (reached) {\n      setEndReached(true);\n      onReachedToEnd && onReachedToEnd();\n      if (!dynamicResetEnabled) {\n        if (autoReset) {\n          gestureDisabled.value = true;\n          timeoutRef.current = setTimeout(() => {\n            reset();\n          }, autoResetDelay);\n        }\n      }\n      if (!reverseSlideEnabled) {\n        gestureDisabled.value = true;\n      }\n    } else {\n      setEndReached(false);\n      onReachedToStart && onReachedToStart();\n    }\n  };\n\n  const clamp = (value: number, lowerBound: number, upperBound: number) => {\n    'worklet';\n    return Math.min(Math.max(lowerBound, value), upperBound);\n  };\n\n  const reset = () => {\n    'worklet';\n    dragX.value = withSpring(0, { damping: 20, stiffness: 100 }, () => {\n      runOnJS(handleComplete)(false);\n    });\n    gestureDisabled.value = false;\n  };\n\n  const moveTo = (value: number, complete: boolean) => {\n    'worklet';\n    dragX.value = withSpring(value, { damping: 20, stiffness: 100 }, () => {\n      runOnJS(handleComplete)(complete);\n    });\n  };\n\n  const animatedGestureHandler = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    AnimatedGHContext\n  >({\n    onStart: (_, context) => {\n      context.startX = dragX.value;\n      runOnJS(onSlideStart!)();\n    },\n    onActive: (event, context) => {\n      if (gestureDisabled.value) {\n        return;\n      }\n\n      const translationX = context.startX + event.translationX;\n      if (isRTL) {\n        dragX.value = clamp(translationX, scrollDistance, 0);\n      } else {\n        dragX.value = clamp(translationX, 0, scrollDistance);\n      }\n    },\n    onEnd: () => {\n      // console.log(`onEnd: dragX : ${dragX.value}`);\n      if (gestureDisabled.value) {\n        return;\n      }\n\n      runOnJS(onSlideEnd!)(dragX.value > slideThreshold);\n\n      if (isRTL) {\n        if (dragX.value > slideThreshold) {\n          if (dragX.value === 0) {\n            runOnJS(handleComplete)(false);\n            return;\n          }\n          moveTo(0, false);\n        } else {\n          if (dragX.value === scrollDistance) {\n            runOnJS(handleComplete)(true);\n            return;\n          }\n          moveTo(scrollDistance, true);\n        }\n      } else {\n        if (dragX.value < slideThreshold) {\n          if (dragX.value === 0) {\n            runOnJS(handleComplete)(false);\n            return;\n          }\n          moveTo(0, false);\n        } else {\n          if (dragX.value === scrollDistance) {\n            runOnJS(handleComplete)(true);\n            return;\n          }\n          moveTo(scrollDistance, true);\n        }\n      }\n    },\n  });\n\n  return (\n    <View\n      style={[\n        styles.container,\n        { opacity },\n        containerStyle,\n        { height, borderRadius, ...(width ? { width } : {}) },\n      ]}\n      onLayout={onLayoutContainer}\n    >\n      <SlideButtonText\n        title={title}\n        titleStyle={titleStyle}\n        titleContainerStyle={titleContainerStyle}\n        height={childHeight}\n        padding={padding}\n        borderRadius={radius}\n        translateX={dragX}\n        scrollDistance={scrollDistance}\n      />\n\n      <Animated.View\n        testID=\"Underlay\"\n        style={[\n          styles.underlayContainer,\n          underlayStyle,\n          underlayAnimStyle,\n          underlayDynamicStyle,\n        ]}\n      />\n\n      <SlideButtonThumb\n        gestureHandler={animatedGestureHandler}\n        translateX={dragX}\n        icon={icon}\n        borderRadius={radius}\n        height={childHeight}\n        padding={padding}\n        endReached={endReached}\n        scrollDistance={scrollDistance}\n        thumbStyle={thumbStyle}\n        isRTL={isRTL}\n        animation={animation}\n        animationDuration={animationDuration}\n        dynamicResetEnabled={dynamicResetEnabled}\n        dynamicResetDelaying={dynamicResetDelaying}\n        animStarted={() => {\n          if (reverseSlideEnabled) {\n            gestureDisabled.value = true;\n          }\n        }}\n        animEnded={() => {\n          if (reverseSlideEnabled) {\n            gestureDisabled.value = false;\n          }\n        }}\n      />\n    </View>\n  );\n};\n\nexport default React.memo(SlideButton);\n\nSlideButton.defaultProps = {\n  height: DEFAULT_HEIGHT,\n  borderRadius: DEFAULT_BORDER_RADIUS,\n  padding: DEFAULT_CONTAINER_PADDING,\n  title: DEFAULT_TITLE,\n  completeThreshold: DEFAULT_COMPLETE_THRESHOLD,\n  disabled: false,\n  reverseSlideEnabled: true,\n  autoReset: DEFAULT_AUTO_RESET,\n  autoResetDelay: DEFAULT_AUTO_RESET_DELAY,\n  animation: DEFAULT_ANIMATION,\n  animationDuration: DEFAULT_ANIMATION_DURATION,\n  dynamicResetEnabled: false,\n  dynamicResetDelaying: false,\n  onSlideStart: () => {},\n  onSlideEnd: () => {},\n  onReachedToStart: () => {},\n  onReachedToEnd: () => {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: DEFAULT_CONTAINER_COLOR,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    marginVertical: 10,\n    height: DEFAULT_HEIGHT,\n    borderRadius: DEFAULT_BORDER_RADIUS,\n    // shadowColor: '#000',\n    // shadowOffset: {\n    //   width: 0,\n    //   height: 1,\n    // },\n    // shadowOpacity: 0.2,\n    // shadowRadius: 1.41,\n    // elevation: 2,\n  },\n  underlayContainer: {\n    position: 'absolute',\n    backgroundColor: DEFAULT_UNDERLAY_COLOR,\n  },\n});\n"]}