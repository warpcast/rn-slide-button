{"version":3,"sources":["SlideButtonText.tsx"],"names":["React","StyleSheet","View","Animated","Extrapolate","interpolate","useAnimatedStyle","DEFAULT_TEXT_COLOR","SlideButtonText","title","titleStyle","titleContainerStyle","height","borderRadius","padding","translateX","scrollDistance","textAnimStyle","opacity","value","CLAMP","styles","titleContainer","margin","memo","create","justifyContent","alignItems","fontSize","maxWidth","textAlign","color"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEEC,UAFF,EAIEC,IAJF,QAMO,cANP;AAOA,OAAOC,QAAP,IAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,gBAA7C,QAAqE,yBAArE;AAIA,MAAMC,kBAAkB,GAAG,SAA3B;;AAUA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,UAFuB;AAGvBC,EAAAA,mBAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA,YALuB;AAMvBC,EAAAA,OANuB;AAOvBC,EAAAA,UAPuB;AAQvBC,EAAAA;AARuB,CAAD,KASI;AAC1B,QAAMC,aAAa,GAAGX,gBAAgB,CAAC,MAAM;AAC3C,WAAO;AACLY,MAAAA,OAAO,EAAEb,WAAW,CAClBU,UAAU,CAACI,KADO,EAElB,CAAC,CAAD,EAAIH,cAAJ,CAFkB,EAGlB,CAAC,IAAD,EAAO,CAAP,CAHkB,EAIlBZ,WAAW,CAACgB,KAJM;AADf,KAAP;AAQD,GATqC,CAAtC;AAUA,sBACE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAC,gBADT;AAEE,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,cAAR,EAAwB;AAAEV,MAAAA,MAAF;AAAUW,MAAAA,MAAM,EAAET,OAAlB;AAA2BD,MAAAA;AAA3B,KAAxB,EAAmEF,mBAAnE;AAFT,kBAIE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,gBAAgB,EAAE,KAHpB;AAIE,IAAA,KAAK,EAAE,CAACU,MAAM,CAACZ,KAAR,EAAeC,UAAf,EAA2BO,aAA3B;AAJT,KAMGR,KANH,CAJF,CADF;AAeD,CAnCD;;AAqCA,4BAAeT,KAAK,CAACwB,IAAN,CAAWhB,eAAX,CAAf;AAEA,MAAMa,MAAM,GAAGpB,UAAU,CAACwB,MAAX,CAAkB;AAC/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,cAAc,EAAE,QADF;AAEdC,IAAAA,UAAU,EAAE;AAFE,GADe;AAK/BlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,KAAK,EAAExB;AAJF;AALwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { SlideButtonCommonProps } from './SlideButton';\n\nconst DEFAULT_TEXT_COLOR = '#FAFAFA';\n\nexport interface SlideButtonTextProps\n  extends Omit<SlideButtonCommonProps, \n  'autoReset' | 'autoResetDelay' | 'animation'| 'animationDuration' | 'endReached'> {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  titleContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst SlideButtonText = ({\n  title,\n  titleStyle,\n  titleContainerStyle,\n  height,\n  borderRadius,\n  padding,\n  translateX,\n  scrollDistance\n}: SlideButtonTextProps) => {\n  const textAnimStyle = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        translateX.value,\n        [0, scrollDistance],\n        [0.99, 0],\n        Extrapolate.CLAMP,\n      ),\n    };\n  })\n  return (\n    <View\n      testID=\"TitleContainer\"\n      style={[styles.titleContainer, { height, margin: padding, borderRadius }, titleContainerStyle]}\n    >\n      <Animated.Text\n        testID=\"Title\"\n        numberOfLines={2}\n        allowFontScaling={false}\n        style={[styles.title, titleStyle, textAnimStyle]}\n      >\n        {title}\n      </Animated.Text>\n    </View>\n  );\n};\n\nexport default React.memo(SlideButtonText);\n\nconst styles = StyleSheet.create({\n  titleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 16,\n    maxWidth: '50%',\n    textAlign: 'center',\n    color: DEFAULT_TEXT_COLOR,\n  },\n});\n"]}